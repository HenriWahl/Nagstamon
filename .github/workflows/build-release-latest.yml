name: build-release-latest
on:
  push:
    tags-ignore: 'v*'
    branches: '**'

env:
  python_win_version: 3.9.4
  repo_dir: nagstamon-jekyll/docs/repo

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install libkrb5-dev
        python -m pip install --upgrade pip
        pip install pytest pylint #flake8
        if [ -f build/requirements/linux.txt ]; then pip install -r build/requirements/linux.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest tests/test_*.py

  debian:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: /usr/bin/docker build -t build-nagstamon -f build/docker/Dockerfile-${{ github.job }} .
      - run: /usr/bin/docker run -v ${{ github.workspace }}:/nagstamon build-nagstamon
      - uses: actions/upload-artifact@v2
        with:
          path: build/*.deb
          retention-days: 1
          if-no-files-found: error

  fedora-32:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: /usr/bin/docker build -t build-nagstamon -f build/docker/Dockerfile-${{ github.job }} .
      - run: /usr/bin/docker run -v ${{ github.workspace }}:/nagstamon build-nagstamon
      - uses: actions/upload-artifact@v2
        with:
          path: build/*.rpm
          retention-days: 1
          if-no-files-found: error

  fedora-33:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: /usr/bin/docker build -t build-nagstamon -f build/docker/Dockerfile-${{ github.job }} .
      - run: /usr/bin/docker run -v ${{ github.workspace }}:/nagstamon build-nagstamon
      - uses: actions/upload-artifact@v2
        with:
          path: build/*.rpm
          retention-days: 1
          if-no-files-found: error

  fedora-34:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: /usr/bin/docker build -t build-nagstamon -f build/docker/Dockerfile-${{ github.job }} .
      - run: /usr/bin/docker run -v ${{ github.workspace }}:/nagstamon build-nagstamon
      - uses: actions/upload-artifact@v2
        with:
          path: build/*.rpm
          retention-days: 1
          if-no-files-found: error

  fedora-35:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: /usr/bin/docker build -t build-nagstamon -f build/docker/Dockerfile-${{ github.job }} .
      - run: /usr/bin/docker run -v ${{ github.workspace }}:/nagstamon build-nagstamon
      - uses: actions/upload-artifact@v2
        with:
          path: build/*.rpm
          retention-days: 1
          if-no-files-found: error

  macos:
    runs-on: macos-10.15
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: pip3 install --no-warn-script-location -r build/requirements/macos.txt
      - run: cd ${{ github.workspace }}/build; python3 build.py
        env:
          PYTHONPATH: ${{ github.workspace }}
      - uses: actions/upload-artifact@v2
        with:
          path: build/*.dmg
          retention-days: 1
          if-no-files-found: error

  windows-32:
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_win_version }}
          architecture: x86
      - run: python -m pip install --no-warn-script-location -r build/requirements/windows.txt
      - run: cd ${{ github.workspace }}/build; python build.py
        env:
          PYTHONPATH: ${{ github.workspace }}
      - uses: actions/upload-artifact@v2
        with:
          path: |
            build/dist/*.zip
            build/dist/*.exe
          retention-days: 1
          if-no-files-found: error

  windows-64:
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_win_version }}
          architecture: x64
      - run: python -m pip install --no-warn-script-location -r build/requirements/windows.txt
      - run: cd ${{ github.workspace }}/build; python build.py
        env:
          PYTHONPATH: ${{ github.workspace }}
      - uses: actions/upload-artifact@v2
        with:
          path: |
            build/dist/*.zip
            build/dist/*.exe
          retention-days: 1
          if-no-files-found: error

  repo-fedora:
    runs-on: ubuntu-latest
    needs: [debian, fedora-32, fedora-33, fedora-34, fedora-35, macos, windows-32, windows-64]
    steps:
      # get binaries created by other jobs
      - uses: actions/download-artifact@v2
      # organize SSH deploy key for nagstamon-repo
      - run: mkdir ~/.ssh
      - run: echo "${{ secrets.NAGSTAMON_REPO_KEY_WEB }}" >  ~/.ssh/id_ed25519
      - run: chmod -R go-rwx ~/.ssh
      # get and prepare nagstamon-jekyll
      - run: git clone git@github.com:HenriWahl/nagstamon-jekyll.git
      - run: rm -rf ${{ env.repo_dir }}/fedora/latest
      - run: mkdir -p ${{ env.repo_dir }}/fedora/latest
      # copy *.rpm files into nagstamon-jekyll
      - run: cp -r artifact/*.rpm ${{ env.repo_dir }}/fedora/latest
      # create rpm repo via Fedora container
      - run: docker run --rm -v $PWD/${{ env.repo_dir }}/fedora/latest:/repo fedora /bin/sh -c "dnf -y install createrepo_c && createrepo /repo"
      # commit and push new binaries to nagstamon-repo
      - run: git config --global user.email "repo@nagstamon.de" && git config --global user.name "Nagstamon Repository"
      - run: cd ${{ env.repo_dir }} && git add . && git commit -am "new latest repo" && git push

  github-release:
    runs-on: ubuntu-latest
    needs: [debian, fedora-32, fedora-33, fedora-34, fedora-35, macos, windows-32, windows-64]
    steps:
      - uses: actions/download-artifact@v2
      - run: cd artifact && md5sum *agstamon* > md5sums.txt
      - run: cd artifact && sha256sum *agstamon* > sha256sums.txt
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          files: |
            artifact/*
